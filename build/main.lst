ARM GAS  /tmp/ccYa3zcl.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccYa3zcl.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** COM_InitTypeDef BspCOMInit;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* USER CODE END 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Core/Src/main.c ****   HAL_Init();
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Configure the system clock */
  83:Core/Src/main.c ****   SystemClock_Config();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END SysInit */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccYa3zcl.s 			page 3


  89:Core/Src/main.c ****   /* Initialize all configured peripherals */
  90:Core/Src/main.c ****   MX_GPIO_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   while(1){
  94:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
  95:Core/Src/main.c ****     HAL_Delay(100);
  96:Core/Src/main.c ****   }
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize led */
 101:Core/Src/main.c ****   BSP_LED_Init(LED_GREEN);
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Initialize USER push-button, will be used to trigger an interrupt each time it's pressed.*/
 104:Core/Src/main.c ****   BSP_PB_Init(BUTTON_USER, BUTTON_MODE_EXTI);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Initialize COM1 port (115200, 8 bits (7-bit data + 1 stop bit), no parity */
 107:Core/Src/main.c ****   BspCOMInit.BaudRate   = 115200;
 108:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 109:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 110:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 111:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 112:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 113:Core/Src/main.c ****   {
 114:Core/Src/main.c ****     Error_Handler();
 115:Core/Src/main.c ****   }
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Infinite loop */
 118:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 119:Core/Src/main.c ****   while (1)
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c ****     /* USER CODE END WHILE */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c ****   /* USER CODE END 3 */
 126:Core/Src/main.c **** }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /**
 129:Core/Src/main.c ****   * @brief System Clock Configuration
 130:Core/Src/main.c ****   * @retval None
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c **** void SystemClock_Config(void)
 133:Core/Src/main.c **** {
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 142:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 143:Core/Src/main.c ****   */
 144:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /tmp/ccYa3zcl.s 			page 4


 146:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief GPIO Initialization Function
 176:Core/Src/main.c ****   * @param None
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** static void MX_GPIO_Init(void)
 180:Core/Src/main.c **** {
  28              		.loc 1 180 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 8AB0     		sub	sp, sp, #40
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 181:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 181 3 view .LVU1
  41              		.loc 1 181 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
 182:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  /tmp/ccYa3zcl.s 			page 5


 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 187:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 187 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 187 3 view .LVU4
  51              		.loc 1 187 3 view .LVU5
  52 0010 1B4B     		ldr	r3, .L3
  53 0012 DA6C     		ldr	r2, [r3, #76]
  54 0014 42F00402 		orr	r2, r2, #4
  55 0018 DA64     		str	r2, [r3, #76]
  56              		.loc 1 187 3 view .LVU6
  57 001a DA6C     		ldr	r2, [r3, #76]
  58 001c 02F00402 		and	r2, r2, #4
  59 0020 0192     		str	r2, [sp, #4]
  60              		.loc 1 187 3 view .LVU7
  61 0022 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 187 3 view .LVU8
 188:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  64              		.loc 1 188 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 188 3 view .LVU10
  67              		.loc 1 188 3 view .LVU11
  68 0024 DA6C     		ldr	r2, [r3, #76]
  69 0026 42F02002 		orr	r2, r2, #32
  70 002a DA64     		str	r2, [r3, #76]
  71              		.loc 1 188 3 view .LVU12
  72 002c DA6C     		ldr	r2, [r3, #76]
  73 002e 02F02002 		and	r2, r2, #32
  74 0032 0292     		str	r2, [sp, #8]
  75              		.loc 1 188 3 view .LVU13
  76 0034 029A     		ldr	r2, [sp, #8]
  77              	.LBE5:
  78              		.loc 1 188 3 view .LVU14
 189:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 189 3 view .LVU15
  80              	.LBB6:
  81              		.loc 1 189 3 view .LVU16
  82              		.loc 1 189 3 view .LVU17
  83 0036 DA6C     		ldr	r2, [r3, #76]
  84 0038 42F00102 		orr	r2, r2, #1
  85 003c DA64     		str	r2, [r3, #76]
  86              		.loc 1 189 3 view .LVU18
  87 003e DA6C     		ldr	r2, [r3, #76]
  88 0040 02F00102 		and	r2, r2, #1
  89 0044 0392     		str	r2, [sp, #12]
  90              		.loc 1 189 3 view .LVU19
  91 0046 039A     		ldr	r2, [sp, #12]
  92              	.LBE6:
  93              		.loc 1 189 3 view .LVU20
 190:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  94              		.loc 1 190 3 view .LVU21
  95              	.LBB7:
  96              		.loc 1 190 3 view .LVU22
ARM GAS  /tmp/ccYa3zcl.s 			page 6


  97              		.loc 1 190 3 view .LVU23
  98 0048 DA6C     		ldr	r2, [r3, #76]
  99 004a 42F00202 		orr	r2, r2, #2
 100 004e DA64     		str	r2, [r3, #76]
 101              		.loc 1 190 3 view .LVU24
 102 0050 DB6C     		ldr	r3, [r3, #76]
 103 0052 03F00203 		and	r3, r3, #2
 104 0056 0493     		str	r3, [sp, #16]
 105              		.loc 1 190 3 view .LVU25
 106 0058 049B     		ldr	r3, [sp, #16]
 107              	.LBE7:
 108              		.loc 1 190 3 view .LVU26
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 193:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 109              		.loc 1 193 3 view .LVU27
 110 005a 2246     		mov	r2, r4
 111 005c 2021     		movs	r1, #32
 112 005e 4FF09040 		mov	r0, #1207959552
 113 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114              	.LVL0:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /*Configure GPIO pin : PA5 */
 196:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 115              		.loc 1 196 3 view .LVU28
 116              		.loc 1 196 23 is_stmt 0 view .LVU29
 117 0066 2023     		movs	r3, #32
 118 0068 0593     		str	r3, [sp, #20]
 197:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 119              		.loc 1 197 3 is_stmt 1 view .LVU30
 120              		.loc 1 197 24 is_stmt 0 view .LVU31
 121 006a 0123     		movs	r3, #1
 122 006c 0693     		str	r3, [sp, #24]
 198:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 123              		.loc 1 198 3 is_stmt 1 view .LVU32
 124              		.loc 1 198 24 is_stmt 0 view .LVU33
 125 006e 0794     		str	r4, [sp, #28]
 199:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 126              		.loc 1 199 3 is_stmt 1 view .LVU34
 127              		.loc 1 199 25 is_stmt 0 view .LVU35
 128 0070 0894     		str	r4, [sp, #32]
 200:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 129              		.loc 1 200 3 is_stmt 1 view .LVU36
 130 0072 05A9     		add	r1, sp, #20
 131 0074 4FF09040 		mov	r0, #1207959552
 132 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 133              	.LVL1:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 205:Core/Src/main.c **** }
 134              		.loc 1 205 1 is_stmt 0 view .LVU37
 135 007c 0AB0     		add	sp, sp, #40
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 8
 138              		@ sp needed
ARM GAS  /tmp/ccYa3zcl.s 			page 7


 139 007e 10BD     		pop	{r4, pc}
 140              	.L4:
 141              		.align	2
 142              	.L3:
 143 0080 00100240 		.word	1073876992
 144              		.cfi_endproc
 145              	.LFE137:
 147              		.section	.text.Error_Handler,"ax",%progbits
 148              		.align	1
 149              		.global	Error_Handler
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 154              	Error_Handler:
 155              	.LFB138:
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** /* USER CODE END 4 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** /**
 212:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 213:Core/Src/main.c ****   * @retval None
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c **** void Error_Handler(void)
 216:Core/Src/main.c **** {
 156              		.loc 1 216 1 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ Volatile: function does not return.
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 217:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 218:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 219:Core/Src/main.c ****   __disable_irq();
 162              		.loc 1 219 3 view .LVU39
 163              	.LBB8:
 164              	.LBI8:
 165              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  /tmp/ccYa3zcl.s 			page 8


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccYa3zcl.s 			page 9


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccYa3zcl.s 			page 10


 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccYa3zcl.s 			page 11


 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 166              		.loc 2 207 27 view .LVU40
 167              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 168              		.loc 2 209 3 view .LVU41
 169              		.syntax unified
 170              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 171 0000 72B6     		cpsid i
 172              	@ 0 "" 2
 173              		.thumb
 174              		.syntax unified
 175              	.L6:
 176              	.LBE9:
 177              	.LBE8:
 220:Core/Src/main.c ****   while (1)
 178              		.loc 1 220 3 view .LVU42
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****   }
 179              		.loc 1 222 3 view .LVU43
 220:Core/Src/main.c ****   while (1)
 180              		.loc 1 220 9 view .LVU44
 181 0002 FEE7     		b	.L6
 182              		.cfi_endproc
 183              	.LFE138:
 185              		.section	.text.SystemClock_Config,"ax",%progbits
 186              		.align	1
 187              		.global	SystemClock_Config
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	SystemClock_Config:
 193              	.LFB136:
 133:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 194              		.loc 1 133 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 80
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 00B5     		push	{lr}
 199              	.LCFI3:
ARM GAS  /tmp/ccYa3zcl.s 			page 12


 200              		.cfi_def_cfa_offset 4
 201              		.cfi_offset 14, -4
 202 0002 95B0     		sub	sp, sp, #84
 203              	.LCFI4:
 204              		.cfi_def_cfa_offset 88
 134:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 205              		.loc 1 134 3 view .LVU46
 134:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 206              		.loc 1 134 22 is_stmt 0 view .LVU47
 207 0004 3822     		movs	r2, #56
 208 0006 0021     		movs	r1, #0
 209 0008 06A8     		add	r0, sp, #24
 210 000a FFF7FEFF 		bl	memset
 211              	.LVL2:
 135:Core/Src/main.c **** 
 212              		.loc 1 135 3 is_stmt 1 view .LVU48
 135:Core/Src/main.c **** 
 213              		.loc 1 135 22 is_stmt 0 view .LVU49
 214 000e 0020     		movs	r0, #0
 215 0010 0190     		str	r0, [sp, #4]
 216 0012 0290     		str	r0, [sp, #8]
 217 0014 0390     		str	r0, [sp, #12]
 218 0016 0490     		str	r0, [sp, #16]
 219 0018 0590     		str	r0, [sp, #20]
 139:Core/Src/main.c **** 
 220              		.loc 1 139 3 is_stmt 1 view .LVU50
 221 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 222              	.LVL3:
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 223              		.loc 1 144 3 view .LVU51
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 224              		.loc 1 144 36 is_stmt 0 view .LVU52
 225 001e 0223     		movs	r3, #2
 226 0020 0693     		str	r3, [sp, #24]
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 227              		.loc 1 145 3 is_stmt 1 view .LVU53
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 228              		.loc 1 145 30 is_stmt 0 view .LVU54
 229 0022 4FF48072 		mov	r2, #256
 230 0026 0992     		str	r2, [sp, #36]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 231              		.loc 1 146 3 is_stmt 1 view .LVU55
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 232              		.loc 1 146 41 is_stmt 0 view .LVU56
 233 0028 4022     		movs	r2, #64
 234 002a 0A92     		str	r2, [sp, #40]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 235              		.loc 1 147 3 is_stmt 1 view .LVU57
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 236              		.loc 1 147 34 is_stmt 0 view .LVU58
 237 002c 0D93     		str	r3, [sp, #52]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 238              		.loc 1 148 3 is_stmt 1 view .LVU59
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 239              		.loc 1 148 35 is_stmt 0 view .LVU60
 240 002e 0E93     		str	r3, [sp, #56]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
ARM GAS  /tmp/ccYa3zcl.s 			page 13


 241              		.loc 1 149 3 is_stmt 1 view .LVU61
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 242              		.loc 1 149 30 is_stmt 0 view .LVU62
 243 0030 0422     		movs	r2, #4
 244 0032 0F92     		str	r2, [sp, #60]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 245              		.loc 1 150 3 is_stmt 1 view .LVU63
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 246              		.loc 1 150 30 is_stmt 0 view .LVU64
 247 0034 5522     		movs	r2, #85
 248 0036 1092     		str	r2, [sp, #64]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 249              		.loc 1 151 3 is_stmt 1 view .LVU65
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 250              		.loc 1 151 30 is_stmt 0 view .LVU66
 251 0038 1193     		str	r3, [sp, #68]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 252              		.loc 1 152 3 is_stmt 1 view .LVU67
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 253              		.loc 1 152 30 is_stmt 0 view .LVU68
 254 003a 1293     		str	r3, [sp, #72]
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 255              		.loc 1 153 3 is_stmt 1 view .LVU69
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 256              		.loc 1 153 30 is_stmt 0 view .LVU70
 257 003c 1393     		str	r3, [sp, #76]
 154:Core/Src/main.c ****   {
 258              		.loc 1 154 3 is_stmt 1 view .LVU71
 154:Core/Src/main.c ****   {
 259              		.loc 1 154 7 is_stmt 0 view .LVU72
 260 003e 06A8     		add	r0, sp, #24
 261 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
 262              	.LVL4:
 154:Core/Src/main.c ****   {
 263              		.loc 1 154 6 discriminator 1 view .LVU73
 264 0044 80B9     		cbnz	r0, .L11
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 265              		.loc 1 161 3 is_stmt 1 view .LVU74
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 266              		.loc 1 161 31 is_stmt 0 view .LVU75
 267 0046 0F23     		movs	r3, #15
 268 0048 0193     		str	r3, [sp, #4]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 269              		.loc 1 163 3 is_stmt 1 view .LVU76
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 270              		.loc 1 163 34 is_stmt 0 view .LVU77
 271 004a 0323     		movs	r3, #3
 272 004c 0293     		str	r3, [sp, #8]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 273              		.loc 1 164 3 is_stmt 1 view .LVU78
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 274              		.loc 1 164 35 is_stmt 0 view .LVU79
 275 004e 0023     		movs	r3, #0
 276 0050 0393     		str	r3, [sp, #12]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 277              		.loc 1 165 3 is_stmt 1 view .LVU80
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccYa3zcl.s 			page 14


 278              		.loc 1 165 36 is_stmt 0 view .LVU81
 279 0052 0493     		str	r3, [sp, #16]
 166:Core/Src/main.c **** 
 280              		.loc 1 166 3 is_stmt 1 view .LVU82
 166:Core/Src/main.c **** 
 281              		.loc 1 166 36 is_stmt 0 view .LVU83
 282 0054 0593     		str	r3, [sp, #20]
 168:Core/Src/main.c ****   {
 283              		.loc 1 168 3 is_stmt 1 view .LVU84
 168:Core/Src/main.c ****   {
 284              		.loc 1 168 7 is_stmt 0 view .LVU85
 285 0056 0421     		movs	r1, #4
 286 0058 0DEB0100 		add	r0, sp, r1
 287 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 288              	.LVL5:
 168:Core/Src/main.c ****   {
 289              		.loc 1 168 6 discriminator 1 view .LVU86
 290 0060 20B9     		cbnz	r0, .L12
 172:Core/Src/main.c **** 
 291              		.loc 1 172 1 view .LVU87
 292 0062 15B0     		add	sp, sp, #84
 293              	.LCFI5:
 294              		.cfi_remember_state
 295              		.cfi_def_cfa_offset 4
 296              		@ sp needed
 297 0064 5DF804FB 		ldr	pc, [sp], #4
 298              	.L11:
 299              	.LCFI6:
 300              		.cfi_restore_state
 156:Core/Src/main.c ****   }
 301              		.loc 1 156 5 is_stmt 1 view .LVU88
 302 0068 FFF7FEFF 		bl	Error_Handler
 303              	.LVL6:
 304              	.L12:
 170:Core/Src/main.c ****   }
 305              		.loc 1 170 5 view .LVU89
 306 006c FFF7FEFF 		bl	Error_Handler
 307              	.LVL7:
 308              		.cfi_endproc
 309              	.LFE136:
 311              		.section	.text.main,"ax",%progbits
 312              		.align	1
 313              		.global	main
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 318              	main:
 319              	.LFB135:
  67:Core/Src/main.c **** 
 320              		.loc 1 67 1 view -0
 321              		.cfi_startproc
 322              		@ Volatile: function does not return.
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              	.LCFI7:
 327              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccYa3zcl.s 			page 15


 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
  76:Core/Src/main.c **** 
 330              		.loc 1 76 3 view .LVU91
 331 0002 FFF7FEFF 		bl	HAL_Init
 332              	.LVL8:
  83:Core/Src/main.c **** 
 333              		.loc 1 83 3 view .LVU92
 334 0006 FFF7FEFF 		bl	SystemClock_Config
 335              	.LVL9:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 336              		.loc 1 90 3 view .LVU93
 337 000a FFF7FEFF 		bl	MX_GPIO_Init
 338              	.LVL10:
 339              	.L14:
  93:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 340              		.loc 1 93 3 view .LVU94
  94:Core/Src/main.c ****     HAL_Delay(100);
 341              		.loc 1 94 5 view .LVU95
 342 000e 2021     		movs	r1, #32
 343 0010 4FF09040 		mov	r0, #1207959552
 344 0014 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 345              	.LVL11:
  95:Core/Src/main.c ****   }
 346              		.loc 1 95 5 discriminator 1 view .LVU96
 347 0018 6420     		movs	r0, #100
 348 001a FFF7FEFF 		bl	HAL_Delay
 349              	.LVL12:
  93:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 350              		.loc 1 93 8 view .LVU97
 351 001e F6E7     		b	.L14
 352              		.cfi_endproc
 353              	.LFE135:
 355              		.global	BspCOMInit
 356              		.section	.bss.BspCOMInit,"aw",%nobits
 357              		.align	2
 360              	BspCOMInit:
 361 0000 00000000 		.space	16
 361      00000000 
 361      00000000 
 361      00000000 
 362              		.text
 363              	.Letext0:
 364              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 365              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 366              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 367              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 368              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 369              		.file 8 "Drivers/BSP/STM32G4xx_Nucleo/stm32g4xx_nucleo.h"
 370              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 371              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 372              		.file 11 "<built-in>"
ARM GAS  /tmp/ccYa3zcl.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccYa3zcl.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccYa3zcl.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccYa3zcl.s:143    .text.MX_GPIO_Init:00000080 $d
     /tmp/ccYa3zcl.s:148    .text.Error_Handler:00000000 $t
     /tmp/ccYa3zcl.s:154    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccYa3zcl.s:186    .text.SystemClock_Config:00000000 $t
     /tmp/ccYa3zcl.s:192    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccYa3zcl.s:312    .text.main:00000000 $t
     /tmp/ccYa3zcl.s:318    .text.main:00000000 main
     /tmp/ccYa3zcl.s:360    .bss.BspCOMInit:00000000 BspCOMInit
     /tmp/ccYa3zcl.s:357    .bss.BspCOMInit:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
