ARM GAS  /tmp/ccKMWKOq.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB138:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccKMWKOq.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** COM_InitTypeDef BspCOMInit;
  45:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** volatile uint8_t conditionMet = 0;
  50:Core/Src/main.c **** uint8_t scd41_addr = 0x62 << 1; //7 bit address shifted left
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_I2C1_Init(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** void scd41_start(void);
  61:Core/Src/main.c **** uint8_t scd41_read(void);
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  66:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /**
  71:Core/Src/main.c ****   * @brief  The application entry point.
  72:Core/Src/main.c ****   * @retval int
  73:Core/Src/main.c ****   */
  74:Core/Src/main.c **** int main(void)
  75:Core/Src/main.c **** {
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  84:Core/Src/main.c ****   HAL_Init();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END Init */
ARM GAS  /tmp/ccKMWKOq.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Configure the system clock */
  91:Core/Src/main.c ****   SystemClock_Config();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Initialize all configured peripherals */
  98:Core/Src/main.c ****   MX_GPIO_Init();
  99:Core/Src/main.c ****   MX_I2C1_Init();
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Initialize led */
 105:Core/Src/main.c ****   BSP_LED_Init(LED_GREEN);
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Initialize USER push-button, will be used to trigger an interrupt each time it's pressed.*/
 108:Core/Src/main.c ****   BSP_PB_Init(BUTTON_USER, BUTTON_MODE_EXTI);
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Initialize COM1 port (115200, 8 bits (7-bit data + 1 stop bit), no parity */
 111:Core/Src/main.c ****   BspCOMInit.BaudRate   = 115200;
 112:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 113:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 114:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 115:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 116:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 117:Core/Src/main.c ****   {
 118:Core/Src/main.c ****     Error_Handler();
 119:Core/Src/main.c ****   }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* Infinite loop */
 122:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   scd41_start();
 125:Core/Src/main.c ****   HAL_Delay(5000);  // warm-up delay
 126:Core/Src/main.c ****   while (1)
 127:Core/Src/main.c ****   {
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****     /* USER CODE END WHILE */
 130:Core/Src/main.c ****     if (scd41_read()) {
 131:Core/Src/main.c ****       BSP_LED_Toggle(LED_GREEN);
 132:Core/Src/main.c ****     }
 133:Core/Src/main.c ****     HAL_Delay(5000);
 134:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 135:Core/Src/main.c ****   }
 136:Core/Src/main.c ****   /* USER CODE END 3 */
 137:Core/Src/main.c **** }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** /**
 140:Core/Src/main.c ****   * @brief System Clock Configuration
 141:Core/Src/main.c ****   * @retval None
 142:Core/Src/main.c ****   */
 143:Core/Src/main.c **** void SystemClock_Config(void)
 144:Core/Src/main.c **** {
 145:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/ccKMWKOq.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 153:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 165:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 166:Core/Src/main.c ****   {
 167:Core/Src/main.c ****     Error_Handler();
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 180:Core/Src/main.c ****   {
 181:Core/Src/main.c ****     Error_Handler();
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c **** }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** /**
 186:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 187:Core/Src/main.c ****   * @param None
 188:Core/Src/main.c ****   * @retval None
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c **** static void MX_I2C1_Init(void)
 191:Core/Src/main.c **** {
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 200:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 201:Core/Src/main.c ****   hi2c1.Init.Timing = 0x40B285C2;
 202:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
ARM GAS  /tmp/ccKMWKOq.s 			page 5


 203:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 204:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 205:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 206:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 207:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 208:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 209:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 210:Core/Src/main.c ****   {
 211:Core/Src/main.c ****     Error_Handler();
 212:Core/Src/main.c ****   }
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /** Configure Analogue filter
 215:Core/Src/main.c ****   */
 216:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 217:Core/Src/main.c ****   {
 218:Core/Src/main.c ****     Error_Handler();
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /** Configure Digital filter
 222:Core/Src/main.c ****   */
 223:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     Error_Handler();
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** }
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /**
 234:Core/Src/main.c ****   * @brief GPIO Initialization Function
 235:Core/Src/main.c ****   * @param None
 236:Core/Src/main.c ****   * @retval None
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c **** static void MX_GPIO_Init(void)
 239:Core/Src/main.c **** {
  28              		.loc 1 239 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 84B0     		sub	sp, sp, #16
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
 240:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 245:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  36              		.loc 1 245 3 view .LVU1
  37              	.LBB4:
  38              		.loc 1 245 3 view .LVU2
  39              		.loc 1 245 3 view .LVU3
  40 0002 134B     		ldr	r3, .L3
  41 0004 DA6C     		ldr	r2, [r3, #76]
ARM GAS  /tmp/ccKMWKOq.s 			page 6


  42 0006 42F00402 		orr	r2, r2, #4
  43 000a DA64     		str	r2, [r3, #76]
  44              		.loc 1 245 3 view .LVU4
  45 000c DA6C     		ldr	r2, [r3, #76]
  46 000e 02F00402 		and	r2, r2, #4
  47 0012 0092     		str	r2, [sp]
  48              		.loc 1 245 3 view .LVU5
  49 0014 009A     		ldr	r2, [sp]
  50              	.LBE4:
  51              		.loc 1 245 3 view .LVU6
 246:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  52              		.loc 1 246 3 view .LVU7
  53              	.LBB5:
  54              		.loc 1 246 3 view .LVU8
  55              		.loc 1 246 3 view .LVU9
  56 0016 DA6C     		ldr	r2, [r3, #76]
  57 0018 42F02002 		orr	r2, r2, #32
  58 001c DA64     		str	r2, [r3, #76]
  59              		.loc 1 246 3 view .LVU10
  60 001e DA6C     		ldr	r2, [r3, #76]
  61 0020 02F02002 		and	r2, r2, #32
  62 0024 0192     		str	r2, [sp, #4]
  63              		.loc 1 246 3 view .LVU11
  64 0026 019A     		ldr	r2, [sp, #4]
  65              	.LBE5:
  66              		.loc 1 246 3 view .LVU12
 247:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  67              		.loc 1 247 3 view .LVU13
  68              	.LBB6:
  69              		.loc 1 247 3 view .LVU14
  70              		.loc 1 247 3 view .LVU15
  71 0028 DA6C     		ldr	r2, [r3, #76]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e DA64     		str	r2, [r3, #76]
  74              		.loc 1 247 3 view .LVU16
  75 0030 DA6C     		ldr	r2, [r3, #76]
  76 0032 02F00102 		and	r2, r2, #1
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 247 3 view .LVU17
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE6:
  81              		.loc 1 247 3 view .LVU18
 248:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 248 3 view .LVU19
  83              	.LBB7:
  84              		.loc 1 248 3 view .LVU20
  85              		.loc 1 248 3 view .LVU21
  86 003a DA6C     		ldr	r2, [r3, #76]
  87 003c 42F00202 		orr	r2, r2, #2
  88 0040 DA64     		str	r2, [r3, #76]
  89              		.loc 1 248 3 view .LVU22
  90 0042 DB6C     		ldr	r3, [r3, #76]
  91 0044 03F00203 		and	r3, r3, #2
  92 0048 0393     		str	r3, [sp, #12]
  93              		.loc 1 248 3 view .LVU23
  94 004a 039B     		ldr	r3, [sp, #12]
  95              	.LBE7:
ARM GAS  /tmp/ccKMWKOq.s 			page 7


  96              		.loc 1 248 3 view .LVU24
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 253:Core/Src/main.c **** }
  97              		.loc 1 253 1 is_stmt 0 view .LVU25
  98 004c 04B0     		add	sp, sp, #16
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 0
 101              		@ sp needed
 102 004e 7047     		bx	lr
 103              	.L4:
 104              		.align	2
 105              	.L3:
 106 0050 00100240 		.word	1073876992
 107              		.cfi_endproc
 108              	.LFE138:
 110              		.section	.text.scd41_start,"ax",%progbits
 111              		.align	1
 112              		.global	scd41_start
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	scd41_start:
 118              	.LFB139:
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** //start periodic measurement (command 0x21B1)
 258:Core/Src/main.c **** void scd41_start(void){
 119              		.loc 1 258 23 is_stmt 1 view -0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 8
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123 0000 00B5     		push	{lr}
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 4
 126              		.cfi_offset 14, -4
 127 0002 85B0     		sub	sp, sp, #20
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 24
 259:Core/Src/main.c ****   uint8_t cmd[2] = {0x21, 0xB1}; //split command into 2 bytes
 130              		.loc 1 259 3 view .LVU27
 131              		.loc 1 259 11 is_stmt 0 view .LVU28
 132 0004 4BF22113 		movw	r3, #45345
 133 0008 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 260:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1, scd41_addr, cmd, 2, HAL_MAX_DELAY);
 134              		.loc 1 260 3 is_stmt 1 view .LVU29
 135 000c 4FF0FF33 		mov	r3, #-1
 136 0010 0093     		str	r3, [sp]
 137 0012 0223     		movs	r3, #2
 138 0014 03AA     		add	r2, sp, #12
 139 0016 0449     		ldr	r1, .L7
 140 0018 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 141 001a 0448     		ldr	r0, .L7+4
 142 001c FFF7FEFF 		bl	HAL_I2C_Master_Transmit
ARM GAS  /tmp/ccKMWKOq.s 			page 8


 143              	.LVL0:
 261:Core/Src/main.c **** }
 144              		.loc 1 261 1 is_stmt 0 view .LVU30
 145 0020 05B0     		add	sp, sp, #20
 146              	.LCFI4:
 147              		.cfi_def_cfa_offset 4
 148              		@ sp needed
 149 0022 5DF804FB 		ldr	pc, [sp], #4
 150              	.L8:
 151 0026 00BF     		.align	2
 152              	.L7:
 153 0028 00000000 		.word	scd41_addr
 154 002c 00000000 		.word	hi2c1
 155              		.cfi_endproc
 156              	.LFE139:
 158              		.section	.text.scd41_read,"ax",%progbits
 159              		.align	1
 160              		.global	scd41_read
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	scd41_read:
 166              	.LFB140:
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** //read measurement (command 0xEC05)
 265:Core/Src/main.c **** uint8_t scd41_read(void){
 167              		.loc 1 265 25 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 16
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 00B5     		push	{lr}
 172              	.LCFI5:
 173              		.cfi_def_cfa_offset 4
 174              		.cfi_offset 14, -4
 175 0002 87B0     		sub	sp, sp, #28
 176              	.LCFI6:
 177              		.cfi_def_cfa_offset 32
 266:Core/Src/main.c ****   uint8_t cmd[2] = {0xEC, 0x05};
 178              		.loc 1 266 3 view .LVU32
 179              		.loc 1 266 11 is_stmt 0 view .LVU33
 180 0004 40F2EC53 		movw	r3, #1516
 181 0008 ADF81430 		strh	r3, [sp, #20]	@ movhi
 267:Core/Src/main.c ****   uint8_t rx_buffer[9];
 182              		.loc 1 267 3 is_stmt 1 view .LVU34
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   //HAL_I2C_Master_Transmit(&hi2c1, scd41_addr, cmd, 2, HAL_MAX_DELAY);
 270:Core/Src/main.c ****   HAL_Delay(1);
 183              		.loc 1 270 3 view .LVU35
 184 000c 0120     		movs	r0, #1
 185 000e FFF7FEFF 		bl	HAL_Delay
 186              	.LVL1:
 271:Core/Src/main.c ****   if (HAL_I2C_Master_Receive(&hi2c1, scd41_addr, rx_buffer, 9, HAL_MAX_DELAY) == HAL_OK)
 187              		.loc 1 271 3 view .LVU36
 188              		.loc 1 271 7 is_stmt 0 view .LVU37
 189 0012 4FF0FF33 		mov	r3, #-1
 190 0016 0093     		str	r3, [sp]
ARM GAS  /tmp/ccKMWKOq.s 			page 9


 191 0018 0923     		movs	r3, #9
 192 001a 02AA     		add	r2, sp, #8
 193 001c 0549     		ldr	r1, .L13
 194 001e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 195 0020 0548     		ldr	r0, .L13+4
 196 0022 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 197              	.LVL2:
 198              		.loc 1 271 6 discriminator 1 view .LVU38
 199 0026 18B1     		cbz	r0, .L11
 272:Core/Src/main.c ****   {
 273:Core/Src/main.c ****   return 1;
 274:Core/Src/main.c ****   }
 275:Core/Src/main.c ****   return 0;
 200              		.loc 1 275 10 view .LVU39
 201 0028 0020     		movs	r0, #0
 202              	.L10:
 276:Core/Src/main.c **** }
 203              		.loc 1 276 1 view .LVU40
 204 002a 07B0     		add	sp, sp, #28
 205              	.LCFI7:
 206              		.cfi_remember_state
 207              		.cfi_def_cfa_offset 4
 208              		@ sp needed
 209 002c 5DF804FB 		ldr	pc, [sp], #4
 210              	.L11:
 211              	.LCFI8:
 212              		.cfi_restore_state
 273:Core/Src/main.c ****   }
 213              		.loc 1 273 10 view .LVU41
 214 0030 0120     		movs	r0, #1
 215 0032 FAE7     		b	.L10
 216              	.L14:
 217              		.align	2
 218              	.L13:
 219 0034 00000000 		.word	scd41_addr
 220 0038 00000000 		.word	hi2c1
 221              		.cfi_endproc
 222              	.LFE140:
 224              		.section	.text.Error_Handler,"ax",%progbits
 225              		.align	1
 226              		.global	Error_Handler
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	Error_Handler:
 232              	.LFB141:
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** /* USER CODE END 4 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c **** /**
 282:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 283:Core/Src/main.c ****   * @retval None
 284:Core/Src/main.c ****   */
 285:Core/Src/main.c **** void Error_Handler(void)
 286:Core/Src/main.c **** {
 233              		.loc 1 286 1 is_stmt 1 view -0
ARM GAS  /tmp/ccKMWKOq.s 			page 10


 234              		.cfi_startproc
 235              		@ Volatile: function does not return.
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 287:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 288:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 289:Core/Src/main.c ****   __disable_irq();
 239              		.loc 1 289 3 view .LVU43
 240              	.LBB8:
 241              	.LBI8:
 242              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccKMWKOq.s 			page 11


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  /tmp/ccKMWKOq.s 			page 12


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
ARM GAS  /tmp/ccKMWKOq.s 			page 13


 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 243              		.loc 2 207 27 view .LVU44
 244              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 245              		.loc 2 209 3 view .LVU45
 246              		.syntax unified
 247              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 248 0000 72B6     		cpsid i
 249              	@ 0 "" 2
ARM GAS  /tmp/ccKMWKOq.s 			page 14


 250              		.thumb
 251              		.syntax unified
 252              	.L16:
 253              	.LBE9:
 254              	.LBE8:
 290:Core/Src/main.c ****   while (1)
 255              		.loc 1 290 3 view .LVU46
 291:Core/Src/main.c ****   {
 292:Core/Src/main.c ****   }
 256              		.loc 1 292 3 view .LVU47
 290:Core/Src/main.c ****   while (1)
 257              		.loc 1 290 9 view .LVU48
 258 0002 FEE7     		b	.L16
 259              		.cfi_endproc
 260              	.LFE141:
 262              		.section	.text.MX_I2C1_Init,"ax",%progbits
 263              		.align	1
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 268              	MX_I2C1_Init:
 269              	.LFB137:
 191:Core/Src/main.c **** 
 270              		.loc 1 191 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 08B5     		push	{r3, lr}
 275              	.LCFI9:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 3, -8
 278              		.cfi_offset 14, -4
 200:Core/Src/main.c ****   hi2c1.Init.Timing = 0x40B285C2;
 279              		.loc 1 200 3 view .LVU50
 200:Core/Src/main.c ****   hi2c1.Init.Timing = 0x40B285C2;
 280              		.loc 1 200 18 is_stmt 0 view .LVU51
 281 0002 1148     		ldr	r0, .L25
 282 0004 114B     		ldr	r3, .L25+4
 283 0006 0360     		str	r3, [r0]
 201:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 284              		.loc 1 201 3 is_stmt 1 view .LVU52
 201:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 285              		.loc 1 201 21 is_stmt 0 view .LVU53
 286 0008 114B     		ldr	r3, .L25+8
 287 000a 4360     		str	r3, [r0, #4]
 202:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 288              		.loc 1 202 3 is_stmt 1 view .LVU54
 202:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 289              		.loc 1 202 26 is_stmt 0 view .LVU55
 290 000c 0023     		movs	r3, #0
 291 000e 8360     		str	r3, [r0, #8]
 203:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 292              		.loc 1 203 3 is_stmt 1 view .LVU56
 203:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 293              		.loc 1 203 29 is_stmt 0 view .LVU57
 294 0010 0122     		movs	r2, #1
 295 0012 C260     		str	r2, [r0, #12]
ARM GAS  /tmp/ccKMWKOq.s 			page 15


 204:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 296              		.loc 1 204 3 is_stmt 1 view .LVU58
 204:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 297              		.loc 1 204 30 is_stmt 0 view .LVU59
 298 0014 0361     		str	r3, [r0, #16]
 205:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 299              		.loc 1 205 3 is_stmt 1 view .LVU60
 205:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 300              		.loc 1 205 26 is_stmt 0 view .LVU61
 301 0016 4361     		str	r3, [r0, #20]
 206:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 302              		.loc 1 206 3 is_stmt 1 view .LVU62
 206:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 303              		.loc 1 206 31 is_stmt 0 view .LVU63
 304 0018 8361     		str	r3, [r0, #24]
 207:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 305              		.loc 1 207 3 is_stmt 1 view .LVU64
 207:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 306              		.loc 1 207 30 is_stmt 0 view .LVU65
 307 001a C361     		str	r3, [r0, #28]
 208:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 308              		.loc 1 208 3 is_stmt 1 view .LVU66
 208:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 309              		.loc 1 208 28 is_stmt 0 view .LVU67
 310 001c 0362     		str	r3, [r0, #32]
 209:Core/Src/main.c ****   {
 311              		.loc 1 209 3 is_stmt 1 view .LVU68
 209:Core/Src/main.c ****   {
 312              		.loc 1 209 7 is_stmt 0 view .LVU69
 313 001e FFF7FEFF 		bl	HAL_I2C_Init
 314              	.LVL3:
 209:Core/Src/main.c ****   {
 315              		.loc 1 209 6 discriminator 1 view .LVU70
 316 0022 50B9     		cbnz	r0, .L22
 216:Core/Src/main.c ****   {
 317              		.loc 1 216 3 is_stmt 1 view .LVU71
 216:Core/Src/main.c ****   {
 318              		.loc 1 216 7 is_stmt 0 view .LVU72
 319 0024 0021     		movs	r1, #0
 320 0026 0848     		ldr	r0, .L25
 321 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 322              	.LVL4:
 216:Core/Src/main.c ****   {
 323              		.loc 1 216 6 discriminator 1 view .LVU73
 324 002c 38B9     		cbnz	r0, .L23
 223:Core/Src/main.c ****   {
 325              		.loc 1 223 3 is_stmt 1 view .LVU74
 223:Core/Src/main.c ****   {
 326              		.loc 1 223 7 is_stmt 0 view .LVU75
 327 002e 0021     		movs	r1, #0
 328 0030 0548     		ldr	r0, .L25
 329 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 330              	.LVL5:
 223:Core/Src/main.c ****   {
 331              		.loc 1 223 6 discriminator 1 view .LVU76
 332 0036 20B9     		cbnz	r0, .L24
 231:Core/Src/main.c **** 
ARM GAS  /tmp/ccKMWKOq.s 			page 16


 333              		.loc 1 231 1 view .LVU77
 334 0038 08BD     		pop	{r3, pc}
 335              	.L22:
 211:Core/Src/main.c ****   }
 336              		.loc 1 211 5 is_stmt 1 view .LVU78
 337 003a FFF7FEFF 		bl	Error_Handler
 338              	.LVL6:
 339              	.L23:
 218:Core/Src/main.c ****   }
 340              		.loc 1 218 5 view .LVU79
 341 003e FFF7FEFF 		bl	Error_Handler
 342              	.LVL7:
 343              	.L24:
 225:Core/Src/main.c ****   }
 344              		.loc 1 225 5 view .LVU80
 345 0042 FFF7FEFF 		bl	Error_Handler
 346              	.LVL8:
 347              	.L26:
 348 0046 00BF     		.align	2
 349              	.L25:
 350 0048 00000000 		.word	hi2c1
 351 004c 00540040 		.word	1073763328
 352 0050 C285B240 		.word	1085441474
 353              		.cfi_endproc
 354              	.LFE137:
 356              		.section	.text.SystemClock_Config,"ax",%progbits
 357              		.align	1
 358              		.global	SystemClock_Config
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 363              	SystemClock_Config:
 364              	.LFB136:
 144:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 365              		.loc 1 144 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 80
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369 0000 00B5     		push	{lr}
 370              	.LCFI10:
 371              		.cfi_def_cfa_offset 4
 372              		.cfi_offset 14, -4
 373 0002 95B0     		sub	sp, sp, #84
 374              	.LCFI11:
 375              		.cfi_def_cfa_offset 88
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 376              		.loc 1 145 3 view .LVU82
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 377              		.loc 1 145 22 is_stmt 0 view .LVU83
 378 0004 3822     		movs	r2, #56
 379 0006 0021     		movs	r1, #0
 380 0008 06A8     		add	r0, sp, #24
 381 000a FFF7FEFF 		bl	memset
 382              	.LVL9:
 146:Core/Src/main.c **** 
 383              		.loc 1 146 3 is_stmt 1 view .LVU84
 146:Core/Src/main.c **** 
ARM GAS  /tmp/ccKMWKOq.s 			page 17


 384              		.loc 1 146 22 is_stmt 0 view .LVU85
 385 000e 0020     		movs	r0, #0
 386 0010 0190     		str	r0, [sp, #4]
 387 0012 0290     		str	r0, [sp, #8]
 388 0014 0390     		str	r0, [sp, #12]
 389 0016 0490     		str	r0, [sp, #16]
 390 0018 0590     		str	r0, [sp, #20]
 150:Core/Src/main.c **** 
 391              		.loc 1 150 3 is_stmt 1 view .LVU86
 392 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 393              	.LVL10:
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 394              		.loc 1 155 3 view .LVU87
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 395              		.loc 1 155 36 is_stmt 0 view .LVU88
 396 001e 0223     		movs	r3, #2
 397 0020 0693     		str	r3, [sp, #24]
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 398              		.loc 1 156 3 is_stmt 1 view .LVU89
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 399              		.loc 1 156 30 is_stmt 0 view .LVU90
 400 0022 4FF48072 		mov	r2, #256
 401 0026 0992     		str	r2, [sp, #36]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 402              		.loc 1 157 3 is_stmt 1 view .LVU91
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 403              		.loc 1 157 41 is_stmt 0 view .LVU92
 404 0028 4022     		movs	r2, #64
 405 002a 0A92     		str	r2, [sp, #40]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 406              		.loc 1 158 3 is_stmt 1 view .LVU93
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 407              		.loc 1 158 34 is_stmt 0 view .LVU94
 408 002c 0D93     		str	r3, [sp, #52]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 409              		.loc 1 159 3 is_stmt 1 view .LVU95
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 410              		.loc 1 159 35 is_stmt 0 view .LVU96
 411 002e 0E93     		str	r3, [sp, #56]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 412              		.loc 1 160 3 is_stmt 1 view .LVU97
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 413              		.loc 1 160 30 is_stmt 0 view .LVU98
 414 0030 0422     		movs	r2, #4
 415 0032 0F92     		str	r2, [sp, #60]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 416              		.loc 1 161 3 is_stmt 1 view .LVU99
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 417              		.loc 1 161 30 is_stmt 0 view .LVU100
 418 0034 5522     		movs	r2, #85
 419 0036 1092     		str	r2, [sp, #64]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 420              		.loc 1 162 3 is_stmt 1 view .LVU101
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 421              		.loc 1 162 30 is_stmt 0 view .LVU102
 422 0038 1193     		str	r3, [sp, #68]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
ARM GAS  /tmp/ccKMWKOq.s 			page 18


 423              		.loc 1 163 3 is_stmt 1 view .LVU103
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 424              		.loc 1 163 30 is_stmt 0 view .LVU104
 425 003a 1293     		str	r3, [sp, #72]
 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 426              		.loc 1 164 3 is_stmt 1 view .LVU105
 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 427              		.loc 1 164 30 is_stmt 0 view .LVU106
 428 003c 1393     		str	r3, [sp, #76]
 165:Core/Src/main.c ****   {
 429              		.loc 1 165 3 is_stmt 1 view .LVU107
 165:Core/Src/main.c ****   {
 430              		.loc 1 165 7 is_stmt 0 view .LVU108
 431 003e 06A8     		add	r0, sp, #24
 432 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
 433              	.LVL11:
 165:Core/Src/main.c ****   {
 434              		.loc 1 165 6 discriminator 1 view .LVU109
 435 0044 80B9     		cbnz	r0, .L31
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 436              		.loc 1 172 3 is_stmt 1 view .LVU110
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 437              		.loc 1 172 31 is_stmt 0 view .LVU111
 438 0046 0F23     		movs	r3, #15
 439 0048 0193     		str	r3, [sp, #4]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 440              		.loc 1 174 3 is_stmt 1 view .LVU112
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 441              		.loc 1 174 34 is_stmt 0 view .LVU113
 442 004a 0323     		movs	r3, #3
 443 004c 0293     		str	r3, [sp, #8]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 444              		.loc 1 175 3 is_stmt 1 view .LVU114
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 445              		.loc 1 175 35 is_stmt 0 view .LVU115
 446 004e 0023     		movs	r3, #0
 447 0050 0393     		str	r3, [sp, #12]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 448              		.loc 1 176 3 is_stmt 1 view .LVU116
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 449              		.loc 1 176 36 is_stmt 0 view .LVU117
 450 0052 0493     		str	r3, [sp, #16]
 177:Core/Src/main.c **** 
 451              		.loc 1 177 3 is_stmt 1 view .LVU118
 177:Core/Src/main.c **** 
 452              		.loc 1 177 36 is_stmt 0 view .LVU119
 453 0054 0593     		str	r3, [sp, #20]
 179:Core/Src/main.c ****   {
 454              		.loc 1 179 3 is_stmt 1 view .LVU120
 179:Core/Src/main.c ****   {
 455              		.loc 1 179 7 is_stmt 0 view .LVU121
 456 0056 0421     		movs	r1, #4
 457 0058 0DEB0100 		add	r0, sp, r1
 458 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 459              	.LVL12:
 179:Core/Src/main.c ****   {
 460              		.loc 1 179 6 discriminator 1 view .LVU122
ARM GAS  /tmp/ccKMWKOq.s 			page 19


 461 0060 20B9     		cbnz	r0, .L32
 183:Core/Src/main.c **** 
 462              		.loc 1 183 1 view .LVU123
 463 0062 15B0     		add	sp, sp, #84
 464              	.LCFI12:
 465              		.cfi_remember_state
 466              		.cfi_def_cfa_offset 4
 467              		@ sp needed
 468 0064 5DF804FB 		ldr	pc, [sp], #4
 469              	.L31:
 470              	.LCFI13:
 471              		.cfi_restore_state
 167:Core/Src/main.c ****   }
 472              		.loc 1 167 5 is_stmt 1 view .LVU124
 473 0068 FFF7FEFF 		bl	Error_Handler
 474              	.LVL13:
 475              	.L32:
 181:Core/Src/main.c ****   }
 476              		.loc 1 181 5 view .LVU125
 477 006c FFF7FEFF 		bl	Error_Handler
 478              	.LVL14:
 479              		.cfi_endproc
 480              	.LFE136:
 482              		.section	.text.main,"ax",%progbits
 483              		.align	1
 484              		.global	main
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	main:
 490              	.LFB135:
  75:Core/Src/main.c **** 
 491              		.loc 1 75 1 view -0
 492              		.cfi_startproc
 493              		@ Volatile: function does not return.
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496 0000 08B5     		push	{r3, lr}
 497              	.LCFI14:
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 3, -8
 500              		.cfi_offset 14, -4
  84:Core/Src/main.c **** 
 501              		.loc 1 84 3 view .LVU127
 502 0002 FFF7FEFF 		bl	HAL_Init
 503              	.LVL15:
  91:Core/Src/main.c **** 
 504              		.loc 1 91 3 view .LVU128
 505 0006 FFF7FEFF 		bl	SystemClock_Config
 506              	.LVL16:
  98:Core/Src/main.c ****   MX_I2C1_Init();
 507              		.loc 1 98 3 view .LVU129
 508 000a FFF7FEFF 		bl	MX_GPIO_Init
 509              	.LVL17:
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 510              		.loc 1 99 3 view .LVU130
 511 000e FFF7FEFF 		bl	MX_I2C1_Init
ARM GAS  /tmp/ccKMWKOq.s 			page 20


 512              	.LVL18:
 105:Core/Src/main.c **** 
 513              		.loc 1 105 3 view .LVU131
 514 0012 0020     		movs	r0, #0
 515 0014 FFF7FEFF 		bl	BSP_LED_Init
 516              	.LVL19:
 108:Core/Src/main.c **** 
 517              		.loc 1 108 3 view .LVU132
 518 0018 0121     		movs	r1, #1
 519 001a 0020     		movs	r0, #0
 520 001c FFF7FEFF 		bl	BSP_PB_Init
 521              	.LVL20:
 111:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 522              		.loc 1 111 3 view .LVU133
 111:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 523              		.loc 1 111 25 is_stmt 0 view .LVU134
 524 0020 1049     		ldr	r1, .L39
 525 0022 4FF4E133 		mov	r3, #115200
 526 0026 0B60     		str	r3, [r1]
 112:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 527              		.loc 1 112 3 is_stmt 1 view .LVU135
 112:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 528              		.loc 1 112 25 is_stmt 0 view .LVU136
 529 0028 0020     		movs	r0, #0
 530 002a 4860     		str	r0, [r1, #4]
 113:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 531              		.loc 1 113 3 is_stmt 1 view .LVU137
 113:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 532              		.loc 1 113 25 is_stmt 0 view .LVU138
 533 002c 0881     		strh	r0, [r1, #8]	@ movhi
 114:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 534              		.loc 1 114 3 is_stmt 1 view .LVU139
 114:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 535              		.loc 1 114 25 is_stmt 0 view .LVU140
 536 002e 4881     		strh	r0, [r1, #10]	@ movhi
 115:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 537              		.loc 1 115 3 is_stmt 1 view .LVU141
 115:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 538              		.loc 1 115 25 is_stmt 0 view .LVU142
 539 0030 8881     		strh	r0, [r1, #12]	@ movhi
 116:Core/Src/main.c ****   {
 540              		.loc 1 116 3 is_stmt 1 view .LVU143
 116:Core/Src/main.c ****   {
 541              		.loc 1 116 7 is_stmt 0 view .LVU144
 542 0032 FFF7FEFF 		bl	BSP_COM_Init
 543              	.LVL21:
 116:Core/Src/main.c ****   {
 544              		.loc 1 116 6 discriminator 1 view .LVU145
 545 0036 08B1     		cbz	r0, .L34
 118:Core/Src/main.c ****   }
 546              		.loc 1 118 5 is_stmt 1 view .LVU146
 547 0038 FFF7FEFF 		bl	Error_Handler
 548              	.LVL22:
 549              	.L34:
 124:Core/Src/main.c ****   HAL_Delay(5000);  // warm-up delay
 550              		.loc 1 124 3 view .LVU147
 551 003c FFF7FEFF 		bl	scd41_start
ARM GAS  /tmp/ccKMWKOq.s 			page 21


 552              	.LVL23:
 125:Core/Src/main.c ****   while (1)
 553              		.loc 1 125 3 view .LVU148
 554 0040 41F28830 		movw	r0, #5000
 555 0044 FFF7FEFF 		bl	HAL_Delay
 556              	.LVL24:
 557 0048 06E0     		b	.L36
 558              	.L38:
 131:Core/Src/main.c ****     }
 559              		.loc 1 131 7 view .LVU149
 560 004a 0020     		movs	r0, #0
 561 004c FFF7FEFF 		bl	BSP_LED_Toggle
 562              	.LVL25:
 563              	.L35:
 133:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 564              		.loc 1 133 5 view .LVU150
 565 0050 41F28830 		movw	r0, #5000
 566 0054 FFF7FEFF 		bl	HAL_Delay
 567              	.LVL26:
 126:Core/Src/main.c ****   {
 568              		.loc 1 126 9 view .LVU151
 569              	.L36:
 126:Core/Src/main.c ****   {
 570              		.loc 1 126 3 view .LVU152
 130:Core/Src/main.c ****       BSP_LED_Toggle(LED_GREEN);
 571              		.loc 1 130 5 view .LVU153
 130:Core/Src/main.c ****       BSP_LED_Toggle(LED_GREEN);
 572              		.loc 1 130 9 is_stmt 0 view .LVU154
 573 0058 FFF7FEFF 		bl	scd41_read
 574              	.LVL27:
 130:Core/Src/main.c ****       BSP_LED_Toggle(LED_GREEN);
 575              		.loc 1 130 8 discriminator 1 view .LVU155
 576 005c 0028     		cmp	r0, #0
 577 005e F4D1     		bne	.L38
 578 0060 F6E7     		b	.L35
 579              	.L40:
 580 0062 00BF     		.align	2
 581              	.L39:
 582 0064 00000000 		.word	BspCOMInit
 583              		.cfi_endproc
 584              	.LFE135:
 586              		.global	scd41_addr
 587              		.section	.data.scd41_addr,"aw"
 590              	scd41_addr:
 591 0000 C4       		.byte	-60
 592              		.global	conditionMet
 593              		.section	.bss.conditionMet,"aw",%nobits
 596              	conditionMet:
 597 0000 00       		.space	1
 598              		.global	hi2c1
 599              		.section	.bss.hi2c1,"aw",%nobits
 600              		.align	2
 603              	hi2c1:
 604 0000 00000000 		.space	84
 604      00000000 
 604      00000000 
 604      00000000 
ARM GAS  /tmp/ccKMWKOq.s 			page 22


 604      00000000 
 605              		.global	BspCOMInit
 606              		.section	.bss.BspCOMInit,"aw",%nobits
 607              		.align	2
 610              	BspCOMInit:
 611 0000 00000000 		.space	16
 611      00000000 
 611      00000000 
 611      00000000 
 612              		.text
 613              	.Letext0:
 614              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 615              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 616              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 617              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 618              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 619              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_i2c.h"
 620              		.file 9 "Drivers/BSP/STM32G4xx_Nucleo/stm32g4xx_nucleo.h"
 621              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 622              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_i2c_ex.h"
 623              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 624              		.file 13 "<built-in>"
ARM GAS  /tmp/ccKMWKOq.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccKMWKOq.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccKMWKOq.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccKMWKOq.s:106    .text.MX_GPIO_Init:00000050 $d
     /tmp/ccKMWKOq.s:111    .text.scd41_start:00000000 $t
     /tmp/ccKMWKOq.s:117    .text.scd41_start:00000000 scd41_start
     /tmp/ccKMWKOq.s:153    .text.scd41_start:00000028 $d
     /tmp/ccKMWKOq.s:590    .data.scd41_addr:00000000 scd41_addr
     /tmp/ccKMWKOq.s:603    .bss.hi2c1:00000000 hi2c1
     /tmp/ccKMWKOq.s:159    .text.scd41_read:00000000 $t
     /tmp/ccKMWKOq.s:165    .text.scd41_read:00000000 scd41_read
     /tmp/ccKMWKOq.s:219    .text.scd41_read:00000034 $d
     /tmp/ccKMWKOq.s:225    .text.Error_Handler:00000000 $t
     /tmp/ccKMWKOq.s:231    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccKMWKOq.s:263    .text.MX_I2C1_Init:00000000 $t
     /tmp/ccKMWKOq.s:268    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
     /tmp/ccKMWKOq.s:350    .text.MX_I2C1_Init:00000048 $d
     /tmp/ccKMWKOq.s:357    .text.SystemClock_Config:00000000 $t
     /tmp/ccKMWKOq.s:363    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccKMWKOq.s:483    .text.main:00000000 $t
     /tmp/ccKMWKOq.s:489    .text.main:00000000 main
     /tmp/ccKMWKOq.s:582    .text.main:00000064 $d
     /tmp/ccKMWKOq.s:610    .bss.BspCOMInit:00000000 BspCOMInit
     /tmp/ccKMWKOq.s:596    .bss.conditionMet:00000000 conditionMet
     /tmp/ccKMWKOq.s:597    .bss.conditionMet:00000000 $d
     /tmp/ccKMWKOq.s:600    .bss.hi2c1:00000000 $d
     /tmp/ccKMWKOq.s:607    .bss.BspCOMInit:00000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit
HAL_Delay
HAL_I2C_Master_Receive
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
BSP_LED_Init
BSP_PB_Init
BSP_COM_Init
BSP_LED_Toggle
